
/*     G_PAR_DEF - Group paranoid definitions */

/*     Defines paranoid group numbers and error levels for use */
/*     with G_PAR routine. */

/*     This file is generated from environ.h and included by environ.h */

/*     USAGE: */
/*       include <<<std>def>src>g_par_def */
/*       if (g_par(g_dsply,l_param)) then */
/*         write ..... */
/*       end if */


/*     DECLARE: */
/*         logical*2 G_PAR */


/*     PARANOID DEBUGGING LEVELS: */
/*        These values indicate the level of debugging for the */
/*        range of values that the environment variable can take */

/*         integer*2  L_ZERO */
#define	L_ZERO	0 	 /*  display no footprints */
/*         integer*2  L_ACTION_ABORT */
#define	L_ACTION_ABORT	5 	 /*  display aborted changes to points heap */
/*         integer*2  L_ERROR */
#define	L_ERROR	10 	 /*  display system call errors */
/*         integer*2  L_ACTION_CHANGE */
#define	L_ACTION_CHANGE	10 	 /*  display changes to point heap */
/*         integer*2  L_LOG */
#define	L_LOG	15 	 /*  display log messages */
/*         integer*2  L_RANGE */
#define	L_RANGE	20 	 /*  display range check errors */
/*         integer*2  L_PARAM */
#define	L_PARAM	30 	 /*  display parameters to functions */
/*         integer*2  L_RETURN */
#define	L_RETURN	40 	 /*  display return values */
/*         integer*2  L_PRINT */
#define	L_PRINT	100 	 /*  display footprint */

/*         integer*2  L_DEFAULT */
#define	L_DEFAULT	L_ERROR	 /*  default error level */
/*                                       ;* (if no env variable) */
/*         integer*2  L_INVALID */
#define	L_INVALID	1000 	 /*  used to indicate need to read */
/*                                       ;* the env variable */


/*     SUBSYSTEM GROUPS */
/*       These values are used to index into the unixpar array */
/*       It allows the env var's name and value to be retrieved for */
/*       a particular group. */

/* 	integer*2   G_TASK */
#define	G_TASK	0	 /*  Task requesting and handling */
/* 	integer*2   G_QUEUE */
#define	G_QUEUE	1	 /*  Queue handling */
/* 	integer*2   G_SHM */
#define	G_SHM	2	 /*  Shared memory */
/* 	integer*2   G_DAT */
#define	G_DAT	3	 /*  Data I/O routines */
/* 	integer*2   G_ASCV */
#define	G_ASCV	4	 /*  ASCII conversion routines and entry points */
/* 	integer*2   G_BYTE */
#define	G_BYTE	5	 /*  Byte manipulation routines */
/* 	integer*2   G_GHR */
#define	G_GHR	6	 /*  Get hardware reference (ie. ipcghr, tdcghr) */
/* 	integer*2   G_HIST */
#define	G_HIST	7	 /*  History routines */
/* 	integer*2   G_LOCK */
#define	G_LOCK	8	 /*  Lock routines */
/* 	integer*2   G_IPSIO */
#define	G_IPSIO	9	 /*  Integrated Personal Station I/O */
/* 	integer*2   G_KEY */
#define	G_KEY	10	 /*  Keyed files */
/* 	integer*2   G_CMPRES */
#define	G_CMPRES	11	 /*  Compress routine for displays */
/* 	integer*2   G_IPCIO */
#define	G_IPCIO	12	 /*  IPC PLC I/O */
/* 	integer*2   G_MODBUS */
#define	G_MODBUS	13	 /*  Modbus protocol handling (ie. IPC) */
/* 	integer*2   G_TIME */
#define	G_TIME	14	 /*  System time handling */
/* 	integer*2   G_DEVIO */
#define	G_DEVIO	15	 /*  Set raw I/O attributes */
/* 	integer*2   G_ERR */
#define	G_ERR	16	 /*  Communications errors and statistics */
/* 	integer*2   G_ARITH */
#define	G_ARITH	17	 /*  Real arithmetic (ie. fclamp, mzero, ssne) */
/* 	integer*2   G_BIT */
#define	G_BIT	18	 /*  Bit manipulations */
/* 	integer*2   G_SEM */
#define	G_SEM	19	 /*  Semaphore handling */
/* 	integer*2   G_TDC */
#define	G_TDC	20	 /*  TDC routines */
/* 	integer*2   G_GPMAIN */
#define	G_GPMAIN	21	 /*  Database I/O and statistics */
/* 	integer*2   G_ALM */
#define	G_ALM	22	 /*  Alarm counts (ie. alarm increment, alarm decrement) */
/* 	integer*2   G_CRT */
#define	G_CRT	23	 /*  CRT area assignment */
/* 	integer*2   G_PRINT */
#define	G_PRINT	24	 /*  Printer handling */
/* 	integer*2   G_NIF_MSGQ */
#define	G_NIF_MSGQ	25	 /*  Message queue interface routines */
/* 	integer*2   G_NIF_TCP */
#define	G_NIF_TCP	26	 /*  TCP network interface routines */
/* 	integer*2   G_NIF_AIF */
#define	G_NIF_AIF	27	 /*  NIF application interface routines */
/* 	integer*2   G_NIF_SYS */
#define	G_NIF_SYS	28	 /*  General system call errors */
/* 	integer*2   G_NIF_GEN */
#define	G_NIF_GEN	29	 /*  General NIF routines */
/* 	integer*2   G_NIF_MSG */
#define	G_NIF_MSG	30	 /*  Message management routines */
/* 	integer*2   G_TRACE */
#define	G_TRACE	31	 /*  Trace messages */
/* 	integer*2   G_APPLIC */
#define	G_APPLIC	32	 /*  Application programs */
/* 	integer*2   G_R12IO */
#define	G_R12IO	33	 /*  R1200 and R1200c I/O */
/* 	integer*2   G_LNK */
#define	G_LNK	34	 /*  Link routines for dual redundant systems */
/* 	integer*2   G_MODIO */
#define	G_MODIO	35	 /*  MODICON I/O routines */
/* 	integer*2   G_ABRIO */
#define	G_ABRIO	36	 /*  Allen Bradley I/O routines */
/* 	integer*2   G_KNGIO */
#define	G_KNGIO	37	 /*  King Fisher  I/O routines */
/* 	integer*2   G_PSWIO */
#define	G_PSWIO	38	 /*  Peripheral switch I/O routine */
/* 	integer*2   G_CL */
#define	G_CL	39	 /*  TDC CL compiler interface routines */
/* 	integer*2   G_CHKSUM */
#define	G_CHKSUM	40	 /*  Checksum generation routines */
/* 	integer*2   G_IO */
#define	G_IO	41	 /*  General I/O routines */
/* 	integer*2   G_ASEAIO */
#define	G_ASEAIO	42	 /*  Asea I/O routines */
/* 	integer*2   G_ULPIO */
#define	G_ULPIO	43	 /*  MicroLPM I/O routines */
/* 	integer*2   G_STRING */
#define	G_STRING	44	 /*  String manipulation routines */
/* 	integer*2   G_BBLNK */
#define	G_BBLNK	45	 /*  Bristol Babcock link layer routines */
/* 	integer*2   G_BBNET */
#define	G_BBNET	46	 /*  Bristol Babcock network layer routines */
/* 	integer*2   G_BBTRN */
#define	G_BBTRN	47	 /*  Bristol Babcock transport layer routines */
/* 	integer*2   G_BBRDB */
#define	G_BBRDB	48	 /*  Bristol Babcock RDB routines */
/* 	integer*2   G_BBRBE */
#define	G_BBRBE	49	 /*  Bristol Babcock RBE routines */
/* 	integer*2   G_BBALM */
#define	G_BBALM	50	 /*  Bristol Babcock alarm routines */
/* 	integer*2   G_BBSCN */
#define	G_BBSCN	51	 /*  Bristol Babcock scan task routines */
/* 	integer*2   G_DSPLY */
#define	G_DSPLY	52	 /*  Display task and routines */
/* 	integer*2   G_BBTNS */
#define	G_BBTNS	53	 /*  Bristol Babcock transaction routines */
/* 	integer*2   G_BBCFG */
#define	G_BBCFG	54	 /*  Bristol Babcock configurator routines */
/* 	integer*2   G_DUAL_PSW */
#define	G_DUAL_PSW	55	 /*  Dual Redundant PSW software */
/* 	integer*2   G_DUAL_LINK */
#define	G_DUAL_LINK	56	 /*  Dual Redundant link manager software */
/* 	integer*2   G_DUAL_SYNC */
#define	G_DUAL_SYNC	57	 /*  Dual Redundant time synchronisation software */
/* 	integer*2   G_DUAL_TIME */
#define	G_DUAL_TIME	58	 /*  Dual Redundant time server software */
/* 	integer*2   G_DUAL_QUEUE */
#define	G_DUAL_QUEUE	59	 /*  Dual Redundant queue I/F software */
/* 	integer*2   G_DUAL_ONLINE */
#define	G_DUAL_ONLINE	60	 /*  Dual Redundant online backup software */
/* 	integer*2   G_DUAL_OFFLINE */
#define	G_DUAL_OFFLINE	61	 /*  Dual Redundant offline backup software */
/* 	integer*2   G_SCAN */
#define	G_SCAN	62	 /*  Scan task software */
/* 	integer*2   G_ECLIO */
#define	G_ECLIO	63	 /*  Excel I/O routines */
/* 	integer*2   G_SQLRPT */
#define	G_SQLRPT	64	 /*  SQL report program */
/* 	integer*2   G_LCN */
#define	G_LCN	65	 /*  LCN scan task */
/* 	integer*2   G_LICENCE */
#define	G_LICENCE	66	 /*  Licence management */
/* 	integer*2   G_REPORT */
#define	G_REPORT	67	 /*  Report software */
/* 	integer*2   G_I18N */
#define	G_I18N	68	 /*  Internationalisation subsystem */
/* 	integer*2   G_CONFIG */
#define	G_CONFIG	69	 /*  Configuration subsystem */
/* 	integer*2   G_MA5IO */
#define	G_MA5IO	70	 /*  MA500 I/O routines */
/* 	integer*2   G_WINPRT */
#define	G_WINPRT	71	 /*  Win32 printing routines */
/* 	integer*2   G_CONFD */
#define	G_CONFD	72	 /*  Configuration daemon */
/* 	integer*2   G_CONFD_SELECT */
#define	G_CONFD_SELECT	73	 /*  Configuration daemon select subsystem */
/* 	integer*2   G_APPIO */
#define	G_APPIO	74	 /*  Applicom I/O routines */
/* 	integer*2   G_SQDIO */
#define	G_SQDIO	75	 /*  Square D I/O routines */
/* 	integer*2   G_RAD6500 */
#define	G_RAD6500	76	 /*  Rad6500 scan task */
/* 	integer*2   G_RADDAEMON */
#define	G_RADDAEMON	77	 /*  Rad6500 scan daemon */
/* 	integer*2   G_DEFFILE */
#define	G_DEFFILE	78	 /*  Get definition file routines */
/* 	integer*2   G_S90CFG */
#define	G_S90CFG	79	 /*  Series 9000 cfgsum routines */
/* 	integer*2   G_SYSCFG */
#define	G_SYSCFG	80	 /*  System config (OS or SCAN/XSM/XFi) */
/* 	integer*2   G_CCTV */
#define	G_CCTV	81	 /*  CCTV scan tasks */
/* 	integer*2   G_LIGHTS */
#define	G_LIGHTS	82	 /*  Lighting control option */
/* 	integer*2   G_G90IO */
#define	G_G90IO	83	 /*  GE Fanuc series 90 I/O */
/* 	integer*2   G_POINTS */
#define	G_POINTS	84	 /*  Point database access */
/* 	integer*2   G_DICT */
#define	G_DICT	85	 /*  Dictionary access */
/* 	integer*2   G_XDIALUP */
#define	G_XDIALUP	86	 /*  XLNET dialup program */
/* 	integer*2   G_ODBC */
#define	G_ODBC	87	 /*  ODBC interface */
/* 	integer*2   G_NOTCLI */
#define	G_NOTCLI	88	 /*  Notifications and alarms client */
/* 	integer*2   G_EVARCH */
#define	G_EVARCH	89	 /*  Extended event archiving */
/* 	integer*2   G_ALARM */
#define	G_ALARM	90	 /*  Low level alarm manipulation */
/* 	integer*2   G_CDA */
#define	G_CDA	91	 /*  Control data access routines */
/* 	integer*2   G_LOGGER */
#define	G_LOGGER	92	 /*  Logger */
/* 	integer*2   G_UMAXIO */
#define	G_UMAXIO	93	 /*  UMAX I/O routines */
/* 	integer*2   G_SPPREC */
#define	G_SPPREC	94	 /*  S9000 SPP and recipe paranoids */
/* 	integer*2   G_COPYPROT */
#define	G_COPYPROT	95	 /*  Copy protection */
/* 	integer*2   G_UDCCFG */
#define	G_UDCCFG	96	 /*  UDC cfgsum routines */
/* 	integer*2   G_UDCDEF */
#define	G_UDCDEF	97	 /*  UDC definition file routines */
/* 	integer*2   G_MESSAGE */
#define	G_MESSAGE	98	 /*  Message directory access */
/* 	integer*2   G_FBUSIO */
#define	G_FBUSIO	99	 /*  Fieldbus routines */
/* 	integer*2   G_BACNET */
#define	G_BACNET	100	 /*  BACnet server */
/* 	integer*2   G_DFSIO */
#define	G_DFSIO	101	 /*  FS90 */
/* 	integer*2   G_OREPORT */
#define	G_OREPORT	102	 /*  Open database reporting */
/* 	integer*2   G_OPC */
#define	G_OPC	103	 /*  OPC interface */
/* 	integer*2   G_DFSDMN */
#define	G_DFSDMN	104	 /*  FS90 daemon paranoids */
/* 	integer*2   G_ZONE */
#define	G_ZONE	105	 /*  Zone enforcement */
/* 	integer*2   G_SHIFTMNGR */
#define	G_SHIFTMNGR	106	 /*  Shift manager */
/* 	integer*2   G_ACSCFG */
#define	G_ACSCFG	107	 /*  Access Configurator */
/* 	integer*2   G_SMS7IO */
#define	G_SMS7IO	108	 /*  Siemens S7 interface */
/* 	integer*2   G_MMUIO */
#define	G_MMUIO	109	 /*  Moore mycro 352 I/O routines */
/* 	integer*2   G_ALM_NOTIF */
#define	G_ALM_NOTIF	110	 /*  Alarm notification paranoids */
/* 	integer*2   G_FSCIO */
#define	G_FSCIO	111	 /*  FSC routines */
/* 	integer*2   G_SOE */
#define	G_SOE	112	 /*  FSCSOE routines */
/* 	integer*2   G_XPC5 */
#define	G_XPC5	113	 /*  XFI - XLNET general */
/* 	integer*2   G_XL5IO */
#define	G_XL5IO	114	 /*  XFI - I/O routines */
/* 	integer*2   G_G80IO */
#define	G_G80IO	115	 /*  GEM 80 I/O routines */
/* 	integer*2   G_DIALUP */
#define	G_DIALUP	116	 /*  Dialup daemon routines */
/* 	integer*2   G_DMNIO */
#define	G_DMNIO	117	 /*  Daemon I/O routines */
/* 	integer*2   G_IVR */
#define	G_IVR	118	 /*  XFI - IVR routines */
/* 	integer*2   G_PGAP */
#define	G_PGAP	119	 /*  Perimeter global anti-passback routines */
/* 	integer*2   G_H78IO */
#define	G_H78IO	120	 /*  7800 series burner controller paranoid */
/* 	integer*2   G_OPCIO */
#define	G_OPCIO	121	 /*  OPC client routines */
/* 	integer*2   G_GDA */
#define	G_GDA	122	 /*  Generic data access routines */
/* 	integer*2   G_GDALOCK */
#define	G_GDALOCK	123	 /*  GDA locking routines */
/* 	integer*2   G_GDALOCAL */
#define	G_GDALOCAL	124	 /*  GDA local access routines */
/* 	integer*2   G_GDAREM */
#define	G_GDAREM	125	 /*  GDA remote access routines */
/* 	integer*2   G_GDANOTSRV */
#define	G_GDANOTSRV	126	 /*  GDA notification server */
/* 	integer*2   G_GDANOTCLI */
#define	G_GDANOTCLI	127	 /*  GDA notification client */
/* 	integer*2   G_UL */
#define	G_UL	128	 /*  UL listed software */
/* 	integer*2   G_BALYIO */
#define	G_BALYIO	129	 /*  Bailey scan task */
/* 	integer*2   G_ALMPGR */
#define	G_ALMPGR	130	 /*  Alarm pager */
/* 	integer*2   G_MSLINKD */
#define	G_MSLINKD	131	 /*  Multiple server link daemon */
/* 	integer*2   G_XLSSCN */
#define	G_XLSSCN	132	 /*  XLS scan task */
/* 	integer*2   G_XLSDMN */
#define	G_XLSDMN	133	 /*  XLS daemon */
/* 	integer*2   G_I9KSCN */
#define	G_I9KSCN	134	 /*  Intelliguard 9000 scan task */
/* 	integer*2   G_I9KDMN */
#define	G_I9KDMN	135	 /*  Intelliguard 9000 daemon */
/* 	integer*2   G_I9KCFG */
#define	G_I9KCFG	136	 /*  Intelliguard 9000 configuration task */
/* 	integer*2   G_CMS */
#define	G_CMS	137	 /*  Card Management System */
/* 	integer*2   G_MSVRDF */
#define	G_MSVRDF	138	 /*  Multiserver report data factory server */
/* 	integer*2   G_BACSCN */
#define	G_BACSCN	139	 /*  BACnet scan task paranoid */
/* 	integer*2   G_APACIO */
#define	G_APACIO	140	 /*  Moore APACS routines */
/* 	integer*2   G_CONSVR */
#define	G_CONSVR	141	 /*  Server scripting event connection server */
/* 	integer*2   G_AUTSVR */
#define	G_AUTSVR	142	 /*  Server scripting automation server */
/* 	integer*2   G_SCPPKG */
#define	G_SCPPKG	143	 /*  Server scripting script package */
/* 	integer*2   G_CHIP */
#define	G_CHIP	144	 /*  SE chip paranoid */
/* 	integer*2   G_BSIIO */
#define	G_BSIIO	145	 /*  Bristol Babcock open BSI interface */
/* 	integer*2   G_POINTSERVER */
#define	G_POINTSERVER	146	 /*  PointServer development */
/* 	integer*2   G_DNPSCN */
#define	G_DNPSCN	147	 /*  DNP3 top level scantask routines */
/* 	integer*2   G_DNPSCNIO */
#define	G_DNPSCNIO	148	 /*  DNP3 I/O level scantask routines */
/* 	integer*2   G_DNPDMN */
#define	G_DNPDMN	149	 /*  DNP3 top level daemon routines */
/* 	integer*2   G_DNPUSR */
#define	G_DNPUSR	150	 /*  DNP3 user layer daemon routines */
/* 	integer*2   G_DNPAL */
#define	G_DNPAL	151	 /*  DNP3 application layer daemon routines */
/* 	integer*2   G_DNPTL */
#define	G_DNPTL	152	 /*  DNP3 transport layer daemon routines */
/* 	integer*2   G_DNPDLL */
#define	G_DNPDLL	153	 /*  DNP3 data link layer daemon routines */
/* 	integer*2   G_DNPIO */
#define	G_DNPIO	154	 /*  DNP3 device I/O layer daemon routines */
/* 	integer*2   G_TCMIO */
#define	G_TCMIO	155	 /*  Tecom scan task */
/* 	integer*2   G_SQLREP */
#define	G_SQLREP	156	 /*  SQLRep CMS replication task */
/* 	integer*2   G_SCPTSK */
#define	G_SCPTSK	157	 /*  Server scripting script manager task */
/* 	integer*2   G_SCPMNGR */
#define	G_SCPMNGR	158	 /*  Server scripting script manager */
/* 	integer*2   G_SCPPERSIST */
#define	G_SCPPERSIST	159	 /*  Server scripting persistance */
/* 	integer*2   G_SCPEDIT */
#define	G_SCPEDIT	160	 /*  Server scripting editor */
/* 	integer*2   G_TBLCURSOR */
#define	G_TBLCURSOR	161	 /*  Table Cursor */
/* 	integer*2   G_RSI */
#define	G_RSI	162	 /*  RSI Hand Reader */
/* 	integer*2   G_GDASERVER */
#define	G_GDASERVER	163	 /*  GDASERVER */
/* 	integer*2   G_GDAOPCIO */
#define	G_GDAOPCIO	164	 /*  GDA OPC client interface */
/* 	integer*2   G_FILREP */
#define	G_FILREP	165	 /*  File Replication */
/* 	integer*2   G_HSTBCK */
#define	G_HSTBCK	166	 /*  History Backfill */
/* 	integer*2   G_NOTIFHOOKAPI */
#define	G_NOTIFHOOKAPI	167	 /*  Notification Hook API */
/* 	integer*2   G_DSREDIRECT */
#define	G_DSREDIRECT	168	 /*  DSRedSrv and DSRedCli Redirection */
/* 	integer*2   G_DSDCSRV */
#define	G_DSDCSRV	169	 /*  DS Network Components server side */
/* 	integer*2   G_DSDCCLI */
#define	G_DSDCCLI	170	 /*  DS Network Components client side */
/* 	integer*2   G_DSFILEREP */
#define	G_DSFILEREP	171	 /*  DSFileRepSrv, DSFileRepCli and DSAPI File Replication */
/* 	integer*2   G_DSPNTREP */
#define	G_DSPNTREP	172	 /*  DSPntRepSrv, DSPntRepCli and DSAPI Point Replication */
/* 	integer*2   G_DSACKSYNC */
#define	G_DSACKSYNC	173	 /*  DSAckSync Alarm and Message Acknowledgement Synching */
/* 	integer*2   G_DSCOMMON */
#define	G_DSCOMMON	174	 /*  DS Common Libraries */
/* 	integer*2   G_ENERGY */
#define	G_ENERGY	175	 /*  Energy Manager */
/* 	integer*2   G_BCMTOOLS */
#define	G_BCMTOOLS	176	 /*  BizCalc Manager Tools */
/* 	integer*2   G_BCMAUTOVAL */
#define	G_BCMAUTOVAL	177	 /*  BizCalc Manager Auto Validator */
/* 	integer*2   G_BCMPROCESSOR */
#define	G_BCMPROCESSOR	178	 /*  BizCalc Manager Processor */
/* 	integer*2   G_BCMSCHEDULER */
#define	G_BCMSCHEDULER	179	 /*  BizCalc Manager Scheduler */
/* 	integer*2   G_BCMSEQUENCER */
#define	G_BCMSEQUENCER	180	 /*  BizCalc Manager Sequencer */
/* 	integer*2   G_BCMEVENTPROC */
#define	G_BCMEVENTPROC	181	 /*  BizCalc Manager Event Processor */
/* 	integer*2   G_BCMMONITOR */
#define	G_BCMMONITOR	182	 /*  BizCalc Manager Monitor */
/* 	integer*2   G_BCMGENERAL */
#define	G_BCMGENERAL	183	 /*  BizCalc Manager General */
/* 	integer*2   G_SQLDB */
#define	G_SQLDB	184	 /*  SQL Database */
/* 	integer*2   G_BCMALGORITHMS */
#define	G_BCMALGORITHMS	185	 /*  BizCalc Manager Algorithms */
/* 	integer*2   G_ALMEVTATTRIBUTE */
#define	G_ALMEVTATTRIBUTE	186	 /*  alarm/event attributes */
/* 	integer*2   G_NOTIFTRACE */
#define	G_NOTIFTRACE	187	 /*  trace alarm/events in notcli/gdanotci */
/* 	integer*2   G_SECURITY */
#define	G_SECURITY	188	 /*  Used by login, and security library routines */
/* 	integer*2   G_WTMGENERAL */
#define	G_WTMGENERAL	189	 /*  Well Test Manager Common & Client */
/* 	integer*2   G_WTMDATA */
#define	G_WTMDATA	190	 /*  Well Test Manager Data Access */
/* 	integer*2   G_WTMDEVICE */
#define	G_WTMDEVICE	191	 /*  Well Test Manager Device Access */
/* 	integer*2   G_WTMPROCESSOR */
#define	G_WTMPROCESSOR	192	 /*  Well Test Manager Processor */
/* 	integer*2   G_WTMSCHEDULER */
#define	G_WTMSCHEDULER	193	 /*  Well Test Manager Scheduler */
/* 	integer*2   G_HTS */
#define	G_HTS	194	 /*  History Tag Synchronization - General */
/* 	integer*2   G_OPCDA */
#define	G_OPCDA	195	 /*  OPC DA interface */
/* 	integer*2   G_OPCAE */
#define	G_OPCAE	196	 /*  OPC AE interface */
/* 	integer*2   G_OPCHDA */
#define	G_OPCHDA	197	 /*  OPC HDA interface */
/* 	integer*2   G_GS */
#define	G_GS	198	 /*  Global Schedules */
/* 	integer*2   G_EAFGENERAL */
#define	G_EAFGENERAL	199	 /*  Experion Application Framework - General */
/* 	integer*2   G_EAFCONFIG */
#define	G_EAFCONFIG	200	 /*  Experion Application Framework - Configuration */
/* 	integer*2   G_EAFDESKTOP */
#define	G_EAFDESKTOP	201	 /*  Experion Application Framework - Desktop */
/* 	integer*2   G_EAFDIAGNOSTICS */
#define	G_EAFDIAGNOSTICS	202	 /*  Experion Application Framework - Diagnostics */
/* 	integer*2   G_EAFEVENTS */
#define	G_EAFEVENTS	203	 /*  Experion Application Framework - Events */
/* 	integer*2   G_EAFRPDC */
#define	G_EAFRPDC	204	 /*  Experion Application Framework - RPDC */
/* 	integer*2   G_EAFSECURITY */
#define	G_EAFSECURITY	205	 /*  Experion Application Framework - Security */
/* 	integer*2   G_EAFSTORAGE */
#define	G_EAFSTORAGE	206	 /*  Experion Application Framework - Storage */
/* 	integer*2   G_GDAUSAGE */
#define	G_GDAUSAGE	207	 /*  GDA usage statistics */
/* 	integer*2   G_HTSTAG */
#define	G_HTSTAG	208	 /*  History Tag Synchronization - Tag Output */
/* 	integer*2   G_PNTAUDIT */
#define	G_PNTAUDIT	209	 /*  Point audit messages */
/* 	integer*2   G_SYSAUDIT */
#define	G_SYSAUDIT	210	 /*  System audit messages */
/* 	integer*2   G_TAGAUDIT */
#define	G_TAGAUDIT	211	 /*  Tag audit messages */
/* 	integer*2   G_PNTRELAUDIT */
#define	G_PNTRELAUDIT	212	 /*  Point relation audit messages */
/* 	integer*2   G_AUDIBLE */
#define	G_AUDIBLE	213	 /*  Annuniciation and silencing paranoids */
/* 	integer*2   G_GCL */
#define	G_GCL	214	 /*  CDA-FTW  */
/* 	integer*2   G_CDADATA */
#define	G_CDADATA	215	 /*  CDA-FTW  */
/* 	integer*2   G_CDANOTIF */
#define	G_CDANOTIF	216	 /*  CDA-FTW  */
/* 	integer*2   G_CDAPLATFORM */
#define	G_CDAPLATFORM	217	 /*  CDA-FTW  */
/* 	integer*2   G_ER */
#define	G_ER	218	 /*  CDA-FTW  */
/* 	integer*2   G_SR */
#define	G_SR	219	 /*  CDA-FTW  */
/* 	integer*2   G_CHKPOINT */
#define	G_CHKPOINT	220	 /*  CDA-FTW  */
/* 	integer*2   G_BOOTP */
#define	G_BOOTP	221	 /*  CDA-FTW  */
/* 	integer*2   G_CTRLLIB */
#define	G_CTRLLIB	222	 /*  CDA-FTW  */
/* 	integer*2   G_EMDB */
#define	G_EMDB	223	 /*  CDA-FTW  */
/* 	integer*2   G_BROWSER */
#define	G_BROWSER	224	 /*  CDA-FTW  */
/* 	integer*2   G_NDM */
#define	G_NDM	225	 /*  CDA-FTW  */
/* 	integer*2   G_DTL */
#define	G_DTL	226	 /*  CDA-FTW  */
/* 	integer*2   G_ICOA */
#define	G_ICOA	227	 /*  CDA-FTW  */
/* 	integer*2   G_RCOA */
#define	G_RCOA	228	 /*  CDA-FTW  */
/* 	integer*2   G_OPCG */
#define	G_OPCG	229	 /*  CDA-FTW  */
/* 	integer*2   G_FUNCTRACE */
#define	G_FUNCTRACE	230	 /*  Function tracing messages */
/* 	integer*2   G_TIMER */
#define	G_TIMER	231	 /*  Code performance timer and profiling messages */
