
/*                             NOTIFHOOK_FUN */
/*                             ------------- */

/*     REVISION: */
/*         @(#)notifhook_fun,v 830.2.1.1 */

/*     Flags used by notifhook api functions */

#define	NOTIF_ACTION_MASK	0x0000000F	
#define	NOTIF_ACTION_NEW	0x00000001	
#define	NOTIF_ACTION_CHG	0x00000002	
#define	NOTIF_ACTION_DEL	0x00000004	

/*     Flags passed into del_alm, chg_alm, del_msg and chg_msg functions */

#define	NOTIF_DEL_MASK	0x000000F0	
#define	NOTIF_DEL_FULL	0x00000010	

#define	NOTIF_CHG_MASK	0xFFFFFF00	
#define	NOTIF_CHG_AREA	0x00000100	
#define	NOTIF_CHG_TID	0x00000200	
#define	NOTIF_CHG_REC	0x00000400	
#define	NOTIF_CHG_PRNT	0x00000800	
#define	NOTIF_CHG_ACK	0x00001000	
#define	NOTIF_CHG_CNF	0x00002000	
#define	NOTIF_CHG_RTN	0x00004000	
#define	NOTIF_CHG_DIS	0x00008000	
#define	NOTIF_CHG_PRI	0x00010000	
#define	NOTIF_CHG_RST	0x00020000	
#define	NOTIF_CHG_RSP	0x00040000	
#define	NOTIF_CHG_QUAL	0x00080000	
#define	NOTIF_CHG_SHLV	0x00100000	
#define	NOTIF_CHG_UNSHLV	0x00200000	
#define	NOTIF_CHG_SLAP	0xFFFFFF00	  /*  all attributes may have changed */

/*     Flags for use only with hsc_notifhook_evt function */

#define	NOTIF_SENDTO_DSA	0x0001	
#define	NOTIF_SENDTO_OPC	0x0002	
#define	NOTIF_SENDTO_SCP	0x0004	



EXTERN_C void hsc_notifhook_new_alm _DECLARE((int2 *, int2 *, int4));
EXTERN_C void hsc_notifhook_del_alm _DECLARE((int2 *, int2 *, uint4));
EXTERN_C void hsc_notifhook_chg_alm _DECLARE((int2 *, int4, uint4));
EXTERN_C void hsc_notifhook_chg_alm_time _DECLARE((int2 *, int4, uint4, HSCTIME, int2));
EXTERN_C void hsc_notifhook_new_msg _DECLARE((int2 *, int2 *, int4));
EXTERN_C void hsc_notifhook_del_msg _DECLARE((int2 *, int2 *, uint4));
EXTERN_C void hsc_notifhook_chg_msg _DECLARE((int2 *, int4, uint4));
EXTERN_C void hsc_notifhook_evt     _DECLARE((int2 *, int2 *, int2 *));
EXTERN_C int* _OPCinOPC();
EXTERN_C int* _ASinAS();


// Macros for use by any opcserv thread that doesn't want to be called back into itself

#define OPCinOPC *_OPCinOPC()

// Macros for use by any dsacksync thread that doesn't want to be called back into itself

#define ASinAS *_ASinAS()

